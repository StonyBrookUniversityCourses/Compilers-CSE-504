Terminals unused in grammar

   TOK_LEX_ERROR
   TOK_PAT_NOT
   TOK_UMINUS
   TOK_PRINT
   TOK_SHORT
   TOK_DOUBLE_COLON
   TOK_LBRACK
   TOK_DOT


Grammar

    0 $accept: specification $end

    1 specification: ifc_decl_star rule_star
    2              | /* empty */

    3 ifc_decl_star: /* empty */
    4              | ifc_decl_star ifc_decl
    5              | ifc_decl_star error TOK_SEMICOLON

    6 ifc_decl: var_dec
    7         | event_dec_star
    8         | class_dec
    9         | func_decl_star
   10         | TOK_SEMICOLON

   11 rule_star: rule
   12          | rule_star rule

   13 rule: rule_hdr statement_star

   14 rule_hdr: evn_pat_star TOK_ARROW

   15 event_dec_star: event_decl_hdr event_decl_params

   16 event_decl_hdr: TOK_EVENT TOK_IDENT

   17 event_decl_params: TOK_LPAREN formal_param_list_star TOK_RPAREN TOK_SEMICOLON

   18 class_dec: TOK_CLASS TOK_IDENT TOK_SEMICOLON

   19 func_decl_star: func_decl TOK_SEMICOLON
   20               | func_decl func_body

   21 func_decl: func_decl_hdr func_decl_params

   22 func_decl_hdr: type_star TOK_IDENT

   23 func_decl_params: TOK_LPAREN formal_param_list_star TOK_RPAREN

   24 func_body: TOK_LBRACE func_body_inner TOK_RBRACE

   25 func_body_inner: stmt_list
   26                | var_dec_list stmt_list

   27 formal_param_list_star: /* empty */
   28                       | formal_param_list

   29 statement_star: statement

   30 com_stmt_star: com_stmt

   31 com_stmt: TOK_LBRACE stmt_list TOK_RBRACE
   32         | com_stmt TOK_SEMICOLON

   33 stmt_list: statement_star
   34          | stmt_list statement_star

   35 statement: empty_stmt
   36          | func_invoc_stmt
   37          | com_stmt_star
   38          | assign_expr TOK_SEMICOLON
   39          | ret_stmt TOK_SEMICOLON
   40          | if_then_stmt
   41          | if_then_else_stmt

   42 if_then_else_stmt: if_then_stmt TOK_ELSE statement_star

   43 if_then_stmt: TOK_IF expr_star statement_star

   44 ret_stmt: TOK_RETURN expr_star

   45 empty_stmt: TOK_SEMICOLON

   46 func_invoc_stmt: func_invoc TOK_SEMICOLON

   47 func_invoc: TOK_IDENT TOK_LPAREN expr_list_plus TOK_RPAREN

   48 expr_list_plus: expr_list
   49               | /* empty */

   50 expr_list: expr_star
   51          | expr_list TOK_COMMA expr_star

   52 var_dec_list: var_dec
   53             | var_dec_list var_dec

   54 var_dec: type_star var_list TOK_SEMICOLON

   55 var_list: TOK_IDENT
   56         | var_assign
   57         | var_list TOK_COMMA TOK_IDENT
   58         | var_list TOK_COMMA var_assign

   59 var_assign: TOK_IDENT TOK_ASSIGN expr_star

   60 ref_expr: TOK_IDENT

   61 expr_star: expr
   62          | TOK_MINUS expr_star
   63          | TOK_NOT expr_star
   64          | TOK_BITNOT expr_star
   65          | expr_star TOK_BITXOR expr_star
   66          | expr_star TOK_SHL expr_star
   67          | expr_star TOK_LE expr_star
   68          | expr_star TOK_LT expr_star
   69          | expr_star TOK_EQ expr_star
   70          | expr_star TOK_GE expr_star
   71          | expr_star TOK_SHR expr_star
   72          | expr_star TOK_GT expr_star
   73          | expr_star TOK_OR expr_star
   74          | expr_star TOK_BITOR expr_star
   75          | expr_star TOK_MINUS expr_star
   76          | expr_star TOK_NE expr_star
   77          | expr_star TOK_DIV expr_star
   78          | expr_star TOK_MULT expr_star
   79          | expr_star TOK_BITAND expr_star
   80          | expr_star TOK_AND expr_star
   81          | expr_star TOK_MOD expr_star
   82          | expr_star TOK_PLUS expr_star
   83          | TOK_LPAREN expr_star TOK_RPAREN

   84 expr: literal
   85     | func_invoc
   86     | ref_expr
   87     | assign_expr

   88 assign_expr: ref_expr TOK_ASSIGN expr_star

   89 literal: TOK_STRCONST
   90        | TOK_TRUE
   91        | TOK_FALSE
   92        | TOK_UINTNUM
   93        | TOK_DOUBLENUM

   94 formal_param_list: formal_param
   95                  | formal_param_list TOK_COMMA formal_param

   96 formal_param: type_star TOK_IDENT

   97 evn_pat_star: evn_pat

   98 evn_pat: primitive_pat_star
   99        | TOK_NOT evn_pat
  100        | evn_pat TOK_PAT_STAR
  101        | evn_pat TOK_PAT_OR evn_pat
  102        | evn_pat TOK_COLON evn_pat
  103        | TOK_LPAREN evn_pat TOK_RPAREN

  104 primitive_pat_star: primitive_pat
  105                   | primitive_pat TOK_BITOR expr_star

  106 primitive_pat: normal_event
  107              | any_event

  108 normal_event: TOK_IDENT TOK_LPAREN evn_param_list_star TOK_RPAREN

  109 any_event: TOK_ANY

  110 evn_param_list_star: evn_param_list
  111                    | /* empty */

  112 evn_param_list: TOK_IDENT
  113               | evn_param_list TOK_COMMA TOK_IDENT

  114 type_star: type

  115 type: base_type
  116     | TOK_UNSIGNED TOK_INT
  117     | TOK_IDENT

  118 base_type: TOK_VOID
  119          | TOK_STRING
  120          | TOK_INT
  121          | TOK_BOOL
  122          | TOK_BYTE
  123          | TOK_DOUBLE


Terminals, with rules where they appear

$end (0) 0
error (256) 5
TOK_LEX_ERROR (258)
TOK_PAT_STAR (259) 100
TOK_PAT_OR (260) 101
TOK_PAT_NOT (261)
TOK_PLUS (262) 82
TOK_MINUS (263) 62 75
TOK_UMINUS (264)
TOK_MULT (265) 78
TOK_DIV (266) 77
TOK_MOD (267) 81
TOK_BITAND (268) 79
TOK_BITOR (269) 74 105
TOK_BITNOT (270) 64
TOK_BITXOR (271) 65
TOK_SHL (272) 66
TOK_SHR (273) 71
TOK_GT (274) 72
TOK_LT (275) 68
TOK_GE (276) 70
TOK_LE (277) 67
TOK_EQ (278) 69
TOK_NE (279) 76
TOK_AND (280) 80
TOK_OR (281) 73
TOK_NOT (282) 63 99
TOK_COMMA (283) 51 57 58 95 113
TOK_ASSIGN (284) 59 88
TOK_SEMICOLON (285) 5 10 17 18 19 32 38 39 45 46 54
TOK_COLON (286) 102
TOK_ARROW (287) 14
TOK_LBRACE (288) 24 31
TOK_RBRACE (289) 24 31
TOK_LPAREN (290) 17 23 47 83 103 108
TOK_RPAREN (291) 17 23 47 83 103 108
TOK_IF (292) 43
TOK_ELSE (293) 42
TOK_CLASS (294) 18
TOK_RETURN (295) 44
TOK_EVENT (296) 16
TOK_ANY (297) 109
TOK_PRINT (298)
TOK_UINTNUM (299) 92
TOK_DOUBLENUM (300) 93
TOK_VOID (301) 118
TOK_STRING (302) 119
TOK_STRCONST (303) 89
TOK_INT (304) 116 120
TOK_UNSIGNED (305) 116
TOK_BOOL (306) 121
TOK_BYTE (307) 122
TOK_DOUBLE (308) 123
TOK_SHORT (309)
TOK_TRUE (310) 90
TOK_FALSE (311) 91
TOK_IDENT (312) 16 18 22 47 55 57 59 60 96 108 112 113 117
"reduce" (313)
TOK_DOUBLE_COLON (314)
"then" (315)
TOK_LBRACK (316)
TOK_DOT (317)


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
specification (64)
    on left: 1 2, on right: 0
ifc_decl_star (65)
    on left: 3 4 5, on right: 1 4 5
ifc_decl (66)
    on left: 6 7 8 9 10, on right: 4
rule_star (67)
    on left: 11 12, on right: 1 12
rule (68)
    on left: 13, on right: 11 12
rule_hdr (69)
    on left: 14, on right: 13
event_dec_star (70)
    on left: 15, on right: 7
event_decl_hdr (71)
    on left: 16, on right: 15
event_decl_params (72)
    on left: 17, on right: 15
class_dec (73)
    on left: 18, on right: 8
func_decl_star (74)
    on left: 19 20, on right: 9
func_decl (75)
    on left: 21, on right: 19 20
func_decl_hdr (76)
    on left: 22, on right: 21
func_decl_params (77)
    on left: 23, on right: 21
func_body (78)
    on left: 24, on right: 20
func_body_inner (79)
    on left: 25 26, on right: 24
formal_param_list_star (80)
    on left: 27 28, on right: 17 23
statement_star (81)
    on left: 29, on right: 13 33 34 42 43
com_stmt_star (82)
    on left: 30, on right: 37
com_stmt (83)
    on left: 31 32, on right: 30 32
stmt_list (84)
    on left: 33 34, on right: 25 26 31 34
statement (85)
    on left: 35 36 37 38 39 40 41, on right: 29
if_then_else_stmt (86)
    on left: 42, on right: 41
if_then_stmt (87)
    on left: 43, on right: 40 42
ret_stmt (88)
    on left: 44, on right: 39
empty_stmt (89)
    on left: 45, on right: 35
func_invoc_stmt (90)
    on left: 46, on right: 36
func_invoc (91)
    on left: 47, on right: 46 85
expr_list_plus (92)
    on left: 48 49, on right: 47
expr_list (93)
    on left: 50 51, on right: 48 51
var_dec_list (94)
    on left: 52 53, on right: 26 53
var_dec (95)
    on left: 54, on right: 6 52 53
var_list (96)
    on left: 55 56 57 58, on right: 54 57 58
var_assign (97)
    on left: 59, on right: 56 58
ref_expr (98)
    on left: 60, on right: 86 88
expr_star (99)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79 80 81 82 83, on right: 43 44 50 51 59 62 63 64 65 66 67 68 69
    70 71 72 73 74 75 76 77 78 79 80 81 82 83 88 105
expr (100)
    on left: 84 85 86 87, on right: 61
assign_expr (101)
    on left: 88, on right: 38 87
literal (102)
    on left: 89 90 91 92 93, on right: 84
formal_param_list (103)
    on left: 94 95, on right: 28 95
formal_param (104)
    on left: 96, on right: 94 95
evn_pat_star (105)
    on left: 97, on right: 14
evn_pat (106)
    on left: 98 99 100 101 102 103, on right: 97 99 100 101 102 103
primitive_pat_star (107)
    on left: 104 105, on right: 98
primitive_pat (108)
    on left: 106 107, on right: 104 105
normal_event (109)
    on left: 108, on right: 106
any_event (110)
    on left: 109, on right: 107
evn_param_list_star (111)
    on left: 110 111, on right: 108
evn_param_list (112)
    on left: 112 113, on right: 110 113
type_star (113)
    on left: 114, on right: 22 54 96
type (114)
    on left: 115 116 117, on right: 114
base_type (115)
    on left: 118 119 120 121 122 123, on right: 115


State 0

    0 $accept: . specification $end

    $end      reduce using rule 2 (specification)
    $default  reduce using rule 3 (ifc_decl_star)

    specification  go to state 1
    ifc_decl_star  go to state 2


State 1

    0 $accept: specification . $end

    $end  shift, and go to state 3


State 2

    1 specification: ifc_decl_star . rule_star
    4 ifc_decl_star: ifc_decl_star . ifc_decl
    5              | ifc_decl_star . error TOK_SEMICOLON

    error          shift, and go to state 4
    TOK_NOT        shift, and go to state 5
    TOK_SEMICOLON  shift, and go to state 6
    TOK_LPAREN     shift, and go to state 7
    TOK_CLASS      shift, and go to state 8
    TOK_EVENT      shift, and go to state 9
    TOK_ANY        shift, and go to state 10
    TOK_VOID       shift, and go to state 11
    TOK_STRING     shift, and go to state 12
    TOK_INT        shift, and go to state 13
    TOK_UNSIGNED   shift, and go to state 14
    TOK_BOOL       shift, and go to state 15
    TOK_BYTE       shift, and go to state 16
    TOK_DOUBLE     shift, and go to state 17
    TOK_IDENT      shift, and go to state 18

    ifc_decl            go to state 19
    rule_star           go to state 20
    rule                go to state 21
    rule_hdr            go to state 22
    event_dec_star      go to state 23
    event_decl_hdr      go to state 24
    class_dec           go to state 25
    func_decl_star      go to state 26
    func_decl           go to state 27
    func_decl_hdr       go to state 28
    var_dec             go to state 29
    evn_pat_star        go to state 30
    evn_pat             go to state 31
    primitive_pat_star  go to state 32
    primitive_pat       go to state 33
    normal_event        go to state 34
    any_event           go to state 35
    type_star           go to state 36
    type                go to state 37
    base_type           go to state 38


State 3

    0 $accept: specification $end .

    $default  accept


State 4

    5 ifc_decl_star: ifc_decl_star error . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 39


State 5

   99 evn_pat: TOK_NOT . evn_pat

    TOK_NOT     shift, and go to state 5
    TOK_LPAREN  shift, and go to state 7
    TOK_ANY     shift, and go to state 10
    TOK_IDENT   shift, and go to state 40

    evn_pat             go to state 41
    primitive_pat_star  go to state 32
    primitive_pat       go to state 33
    normal_event        go to state 34
    any_event           go to state 35


State 6

   10 ifc_decl: TOK_SEMICOLON .

    $default  reduce using rule 10 (ifc_decl)


State 7

  103 evn_pat: TOK_LPAREN . evn_pat TOK_RPAREN

    TOK_NOT     shift, and go to state 5
    TOK_LPAREN  shift, and go to state 7
    TOK_ANY     shift, and go to state 10
    TOK_IDENT   shift, and go to state 40

    evn_pat             go to state 42
    primitive_pat_star  go to state 32
    primitive_pat       go to state 33
    normal_event        go to state 34
    any_event           go to state 35


State 8

   18 class_dec: TOK_CLASS . TOK_IDENT TOK_SEMICOLON

    TOK_IDENT  shift, and go to state 43


State 9

   16 event_decl_hdr: TOK_EVENT . TOK_IDENT

    TOK_IDENT  shift, and go to state 44


State 10

  109 any_event: TOK_ANY .

    $default  reduce using rule 109 (any_event)


State 11

  118 base_type: TOK_VOID .

    $default  reduce using rule 118 (base_type)


State 12

  119 base_type: TOK_STRING .

    $default  reduce using rule 119 (base_type)


State 13

  120 base_type: TOK_INT .

    $default  reduce using rule 120 (base_type)


State 14

  116 type: TOK_UNSIGNED . TOK_INT

    TOK_INT  shift, and go to state 45


State 15

  121 base_type: TOK_BOOL .

    $default  reduce using rule 121 (base_type)


State 16

  122 base_type: TOK_BYTE .

    $default  reduce using rule 122 (base_type)


State 17

  123 base_type: TOK_DOUBLE .

    $default  reduce using rule 123 (base_type)


State 18

  108 normal_event: TOK_IDENT . TOK_LPAREN evn_param_list_star TOK_RPAREN
  117 type: TOK_IDENT .

    TOK_LPAREN  shift, and go to state 46

    $default  reduce using rule 117 (type)


State 19

    4 ifc_decl_star: ifc_decl_star ifc_decl .

    $default  reduce using rule 4 (ifc_decl_star)


State 20

    1 specification: ifc_decl_star rule_star .
   12 rule_star: rule_star . rule

    TOK_NOT     shift, and go to state 5
    TOK_LPAREN  shift, and go to state 7
    TOK_ANY     shift, and go to state 10
    TOK_IDENT   shift, and go to state 40

    $default  reduce using rule 1 (specification)

    rule                go to state 47
    rule_hdr            go to state 22
    evn_pat_star        go to state 30
    evn_pat             go to state 31
    primitive_pat_star  go to state 32
    primitive_pat       go to state 33
    normal_event        go to state 34
    any_event           go to state 35


State 21

   11 rule_star: rule .

    $default  reduce using rule 11 (rule_star)


State 22

   13 rule: rule_hdr . statement_star

    TOK_SEMICOLON  shift, and go to state 48
    TOK_LBRACE     shift, and go to state 49
    TOK_IF         shift, and go to state 50
    TOK_RETURN     shift, and go to state 51
    TOK_IDENT      shift, and go to state 52

    statement_star     go to state 53
    com_stmt_star      go to state 54
    com_stmt           go to state 55
    statement          go to state 56
    if_then_else_stmt  go to state 57
    if_then_stmt       go to state 58
    ret_stmt           go to state 59
    empty_stmt         go to state 60
    func_invoc_stmt    go to state 61
    func_invoc         go to state 62
    ref_expr           go to state 63
    assign_expr        go to state 64


State 23

    7 ifc_decl: event_dec_star .

    $default  reduce using rule 7 (ifc_decl)


State 24

   15 event_dec_star: event_decl_hdr . event_decl_params

    TOK_LPAREN  shift, and go to state 65

    event_decl_params  go to state 66


State 25

    8 ifc_decl: class_dec .

    $default  reduce using rule 8 (ifc_decl)


State 26

    9 ifc_decl: func_decl_star .

    $default  reduce using rule 9 (ifc_decl)


State 27

   19 func_decl_star: func_decl . TOK_SEMICOLON
   20               | func_decl . func_body

    TOK_SEMICOLON  shift, and go to state 67
    TOK_LBRACE     shift, and go to state 68

    func_body  go to state 69


State 28

   21 func_decl: func_decl_hdr . func_decl_params

    TOK_LPAREN  shift, and go to state 70

    func_decl_params  go to state 71


State 29

    6 ifc_decl: var_dec .

    $default  reduce using rule 6 (ifc_decl)


State 30

   14 rule_hdr: evn_pat_star . TOK_ARROW

    TOK_ARROW  shift, and go to state 72


State 31

   97 evn_pat_star: evn_pat .
  100 evn_pat: evn_pat . TOK_PAT_STAR
  101        | evn_pat . TOK_PAT_OR evn_pat
  102        | evn_pat . TOK_COLON evn_pat

    TOK_PAT_STAR  shift, and go to state 73
    TOK_PAT_OR    shift, and go to state 74
    TOK_COLON     shift, and go to state 75

    $default  reduce using rule 97 (evn_pat_star)


State 32

   98 evn_pat: primitive_pat_star .

    $default  reduce using rule 98 (evn_pat)


State 33

  104 primitive_pat_star: primitive_pat .
  105                   | primitive_pat . TOK_BITOR expr_star

    TOK_BITOR  shift, and go to state 76

    $default  reduce using rule 104 (primitive_pat_star)


State 34

  106 primitive_pat: normal_event .

    $default  reduce using rule 106 (primitive_pat)


State 35

  107 primitive_pat: any_event .

    $default  reduce using rule 107 (primitive_pat)


State 36

   22 func_decl_hdr: type_star . TOK_IDENT
   54 var_dec: type_star . var_list TOK_SEMICOLON

    TOK_IDENT  shift, and go to state 77

    var_list    go to state 78
    var_assign  go to state 79


State 37

  114 type_star: type .

    $default  reduce using rule 114 (type_star)


State 38

  115 type: base_type .

    $default  reduce using rule 115 (type)


State 39

    5 ifc_decl_star: ifc_decl_star error TOK_SEMICOLON .

    $default  reduce using rule 5 (ifc_decl_star)


State 40

  108 normal_event: TOK_IDENT . TOK_LPAREN evn_param_list_star TOK_RPAREN

    TOK_LPAREN  shift, and go to state 46


State 41

   99 evn_pat: TOK_NOT evn_pat .
  100        | evn_pat . TOK_PAT_STAR
  101        | evn_pat . TOK_PAT_OR evn_pat
  102        | evn_pat . TOK_COLON evn_pat

    $default  reduce using rule 99 (evn_pat)


State 42

  100 evn_pat: evn_pat . TOK_PAT_STAR
  101        | evn_pat . TOK_PAT_OR evn_pat
  102        | evn_pat . TOK_COLON evn_pat
  103        | TOK_LPAREN evn_pat . TOK_RPAREN

    TOK_PAT_STAR  shift, and go to state 73
    TOK_PAT_OR    shift, and go to state 74
    TOK_COLON     shift, and go to state 75
    TOK_RPAREN    shift, and go to state 80


State 43

   18 class_dec: TOK_CLASS TOK_IDENT . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 81


State 44

   16 event_decl_hdr: TOK_EVENT TOK_IDENT .

    $default  reduce using rule 16 (event_decl_hdr)


State 45

  116 type: TOK_UNSIGNED TOK_INT .

    $default  reduce using rule 116 (type)


State 46

  108 normal_event: TOK_IDENT TOK_LPAREN . evn_param_list_star TOK_RPAREN

    TOK_IDENT  shift, and go to state 82

    $default  reduce using rule 111 (evn_param_list_star)

    evn_param_list_star  go to state 83
    evn_param_list       go to state 84


State 47

   12 rule_star: rule_star rule .

    $default  reduce using rule 12 (rule_star)


State 48

   45 empty_stmt: TOK_SEMICOLON .

    $default  reduce using rule 45 (empty_stmt)


State 49

   31 com_stmt: TOK_LBRACE . stmt_list TOK_RBRACE

    TOK_SEMICOLON  shift, and go to state 48
    TOK_LBRACE     shift, and go to state 49
    TOK_IF         shift, and go to state 50
    TOK_RETURN     shift, and go to state 51
    TOK_IDENT      shift, and go to state 52

    statement_star     go to state 85
    com_stmt_star      go to state 54
    com_stmt           go to state 55
    stmt_list          go to state 86
    statement          go to state 56
    if_then_else_stmt  go to state 57
    if_then_stmt       go to state 58
    ret_stmt           go to state 59
    empty_stmt         go to state 60
    func_invoc_stmt    go to state 61
    func_invoc         go to state 62
    ref_expr           go to state 63
    assign_expr        go to state 64


State 50

   43 if_then_stmt: TOK_IF . expr_star statement_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 98
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 51

   44 ret_stmt: TOK_RETURN . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 102
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 52

   47 func_invoc: TOK_IDENT . TOK_LPAREN expr_list_plus TOK_RPAREN
   60 ref_expr: TOK_IDENT .

    TOK_LPAREN  shift, and go to state 103

    $default  reduce using rule 60 (ref_expr)


State 53

   13 rule: rule_hdr statement_star .

    $default  reduce using rule 13 (rule)


State 54

   37 statement: com_stmt_star .

    $default  reduce using rule 37 (statement)


State 55

   30 com_stmt_star: com_stmt .
   32 com_stmt: com_stmt . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 104

    $default  reduce using rule 30 (com_stmt_star)


State 56

   29 statement_star: statement .

    $default  reduce using rule 29 (statement_star)


State 57

   41 statement: if_then_else_stmt .

    $default  reduce using rule 41 (statement)


State 58

   40 statement: if_then_stmt .
   42 if_then_else_stmt: if_then_stmt . TOK_ELSE statement_star

    TOK_ELSE  shift, and go to state 105

    $default  reduce using rule 40 (statement)


State 59

   39 statement: ret_stmt . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 106


State 60

   35 statement: empty_stmt .

    $default  reduce using rule 35 (statement)


State 61

   36 statement: func_invoc_stmt .

    $default  reduce using rule 36 (statement)


State 62

   46 func_invoc_stmt: func_invoc . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 107


State 63

   88 assign_expr: ref_expr . TOK_ASSIGN expr_star

    TOK_ASSIGN  shift, and go to state 108


State 64

   38 statement: assign_expr . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 109


State 65

   17 event_decl_params: TOK_LPAREN . formal_param_list_star TOK_RPAREN TOK_SEMICOLON

    TOK_VOID      shift, and go to state 11
    TOK_STRING    shift, and go to state 12
    TOK_INT       shift, and go to state 13
    TOK_UNSIGNED  shift, and go to state 14
    TOK_BOOL      shift, and go to state 15
    TOK_BYTE      shift, and go to state 16
    TOK_DOUBLE    shift, and go to state 17
    TOK_IDENT     shift, and go to state 110

    $default  reduce using rule 27 (formal_param_list_star)

    formal_param_list_star  go to state 111
    formal_param_list       go to state 112
    formal_param            go to state 113
    type_star               go to state 114
    type                    go to state 37
    base_type               go to state 38


State 66

   15 event_dec_star: event_decl_hdr event_decl_params .

    $default  reduce using rule 15 (event_dec_star)


State 67

   19 func_decl_star: func_decl TOK_SEMICOLON .

    $default  reduce using rule 19 (func_decl_star)


State 68

   24 func_body: TOK_LBRACE . func_body_inner TOK_RBRACE

    TOK_SEMICOLON  shift, and go to state 48
    TOK_LBRACE     shift, and go to state 49
    TOK_IF         shift, and go to state 50
    TOK_RETURN     shift, and go to state 51
    TOK_VOID       shift, and go to state 11
    TOK_STRING     shift, and go to state 12
    TOK_INT        shift, and go to state 13
    TOK_UNSIGNED   shift, and go to state 14
    TOK_BOOL       shift, and go to state 15
    TOK_BYTE       shift, and go to state 16
    TOK_DOUBLE     shift, and go to state 17
    TOK_IDENT      shift, and go to state 115

    func_body_inner    go to state 116
    statement_star     go to state 85
    com_stmt_star      go to state 54
    com_stmt           go to state 55
    stmt_list          go to state 117
    statement          go to state 56
    if_then_else_stmt  go to state 57
    if_then_stmt       go to state 58
    ret_stmt           go to state 59
    empty_stmt         go to state 60
    func_invoc_stmt    go to state 61
    func_invoc         go to state 62
    var_dec_list       go to state 118
    var_dec            go to state 119
    ref_expr           go to state 63
    assign_expr        go to state 64
    type_star          go to state 120
    type               go to state 37
    base_type          go to state 38


State 69

   20 func_decl_star: func_decl func_body .

    $default  reduce using rule 20 (func_decl_star)


State 70

   23 func_decl_params: TOK_LPAREN . formal_param_list_star TOK_RPAREN

    TOK_VOID      shift, and go to state 11
    TOK_STRING    shift, and go to state 12
    TOK_INT       shift, and go to state 13
    TOK_UNSIGNED  shift, and go to state 14
    TOK_BOOL      shift, and go to state 15
    TOK_BYTE      shift, and go to state 16
    TOK_DOUBLE    shift, and go to state 17
    TOK_IDENT     shift, and go to state 110

    $default  reduce using rule 27 (formal_param_list_star)

    formal_param_list_star  go to state 121
    formal_param_list       go to state 112
    formal_param            go to state 113
    type_star               go to state 114
    type                    go to state 37
    base_type               go to state 38


State 71

   21 func_decl: func_decl_hdr func_decl_params .

    $default  reduce using rule 21 (func_decl)


State 72

   14 rule_hdr: evn_pat_star TOK_ARROW .

    $default  reduce using rule 14 (rule_hdr)


State 73

  100 evn_pat: evn_pat TOK_PAT_STAR .

    $default  reduce using rule 100 (evn_pat)


State 74

  101 evn_pat: evn_pat TOK_PAT_OR . evn_pat

    TOK_NOT     shift, and go to state 5
    TOK_LPAREN  shift, and go to state 7
    TOK_ANY     shift, and go to state 10
    TOK_IDENT   shift, and go to state 40

    evn_pat             go to state 122
    primitive_pat_star  go to state 32
    primitive_pat       go to state 33
    normal_event        go to state 34
    any_event           go to state 35


State 75

  102 evn_pat: evn_pat TOK_COLON . evn_pat

    TOK_NOT     shift, and go to state 5
    TOK_LPAREN  shift, and go to state 7
    TOK_ANY     shift, and go to state 10
    TOK_IDENT   shift, and go to state 40

    evn_pat             go to state 123
    primitive_pat_star  go to state 32
    primitive_pat       go to state 33
    normal_event        go to state 34
    any_event           go to state 35


State 76

  105 primitive_pat_star: primitive_pat TOK_BITOR . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 124
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 77

   22 func_decl_hdr: type_star TOK_IDENT .
   55 var_list: TOK_IDENT .
   59 var_assign: TOK_IDENT . TOK_ASSIGN expr_star

    TOK_ASSIGN  shift, and go to state 125

    TOK_LPAREN  reduce using rule 22 (func_decl_hdr)
    $default    reduce using rule 55 (var_list)


State 78

   54 var_dec: type_star var_list . TOK_SEMICOLON
   57 var_list: var_list . TOK_COMMA TOK_IDENT
   58         | var_list . TOK_COMMA var_assign

    TOK_COMMA      shift, and go to state 126
    TOK_SEMICOLON  shift, and go to state 127


State 79

   56 var_list: var_assign .

    $default  reduce using rule 56 (var_list)


State 80

  103 evn_pat: TOK_LPAREN evn_pat TOK_RPAREN .

    $default  reduce using rule 103 (evn_pat)


State 81

   18 class_dec: TOK_CLASS TOK_IDENT TOK_SEMICOLON .

    $default  reduce using rule 18 (class_dec)


State 82

  112 evn_param_list: TOK_IDENT .

    $default  reduce using rule 112 (evn_param_list)


State 83

  108 normal_event: TOK_IDENT TOK_LPAREN evn_param_list_star . TOK_RPAREN

    TOK_RPAREN  shift, and go to state 128


State 84

  110 evn_param_list_star: evn_param_list .
  113 evn_param_list: evn_param_list . TOK_COMMA TOK_IDENT

    TOK_COMMA  shift, and go to state 129

    $default  reduce using rule 110 (evn_param_list_star)


State 85

   33 stmt_list: statement_star .

    $default  reduce using rule 33 (stmt_list)


State 86

   31 com_stmt: TOK_LBRACE stmt_list . TOK_RBRACE
   34 stmt_list: stmt_list . statement_star

    TOK_SEMICOLON  shift, and go to state 48
    TOK_LBRACE     shift, and go to state 49
    TOK_RBRACE     shift, and go to state 130
    TOK_IF         shift, and go to state 50
    TOK_RETURN     shift, and go to state 51
    TOK_IDENT      shift, and go to state 52

    statement_star     go to state 131
    com_stmt_star      go to state 54
    com_stmt           go to state 55
    statement          go to state 56
    if_then_else_stmt  go to state 57
    if_then_stmt       go to state 58
    ret_stmt           go to state 59
    empty_stmt         go to state 60
    func_invoc_stmt    go to state 61
    func_invoc         go to state 62
    ref_expr           go to state 63
    assign_expr        go to state 64


State 87

   62 expr_star: TOK_MINUS . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 132
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 88

   64 expr_star: TOK_BITNOT . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 133
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 89

   63 expr_star: TOK_NOT . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 134
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 90

   83 expr_star: TOK_LPAREN . expr_star TOK_RPAREN

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 135
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 91

   92 literal: TOK_UINTNUM .

    $default  reduce using rule 92 (literal)


State 92

   93 literal: TOK_DOUBLENUM .

    $default  reduce using rule 93 (literal)


State 93

   89 literal: TOK_STRCONST .

    $default  reduce using rule 89 (literal)


State 94

   90 literal: TOK_TRUE .

    $default  reduce using rule 90 (literal)


State 95

   91 literal: TOK_FALSE .

    $default  reduce using rule 91 (literal)


State 96

   85 expr: func_invoc .

    $default  reduce using rule 85 (expr)


State 97

   86 expr: ref_expr .
   88 assign_expr: ref_expr . TOK_ASSIGN expr_star

    TOK_ASSIGN  shift, and go to state 108

    $default  reduce using rule 86 (expr)


State 98

   43 if_then_stmt: TOK_IF expr_star . statement_star
   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS       shift, and go to state 136
    TOK_MINUS      shift, and go to state 137
    TOK_MULT       shift, and go to state 138
    TOK_DIV        shift, and go to state 139
    TOK_MOD        shift, and go to state 140
    TOK_BITAND     shift, and go to state 141
    TOK_BITOR      shift, and go to state 142
    TOK_BITXOR     shift, and go to state 143
    TOK_SHL        shift, and go to state 144
    TOK_SHR        shift, and go to state 145
    TOK_GT         shift, and go to state 146
    TOK_LT         shift, and go to state 147
    TOK_GE         shift, and go to state 148
    TOK_LE         shift, and go to state 149
    TOK_EQ         shift, and go to state 150
    TOK_NE         shift, and go to state 151
    TOK_AND        shift, and go to state 152
    TOK_OR         shift, and go to state 153
    TOK_SEMICOLON  shift, and go to state 48
    TOK_LBRACE     shift, and go to state 49
    TOK_IF         shift, and go to state 50
    TOK_RETURN     shift, and go to state 51
    TOK_IDENT      shift, and go to state 52

    statement_star     go to state 154
    com_stmt_star      go to state 54
    com_stmt           go to state 55
    statement          go to state 56
    if_then_else_stmt  go to state 57
    if_then_stmt       go to state 58
    ret_stmt           go to state 59
    empty_stmt         go to state 60
    func_invoc_stmt    go to state 61
    func_invoc         go to state 62
    ref_expr           go to state 63
    assign_expr        go to state 64


State 99

   61 expr_star: expr .

    $default  reduce using rule 61 (expr_star)


State 100

   87 expr: assign_expr .

    $default  reduce using rule 87 (expr)


State 101

   84 expr: literal .

    $default  reduce using rule 84 (expr)


State 102

   44 ret_stmt: TOK_RETURN expr_star .
   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145
    TOK_GT      shift, and go to state 146
    TOK_LT      shift, and go to state 147
    TOK_GE      shift, and go to state 148
    TOK_LE      shift, and go to state 149
    TOK_EQ      shift, and go to state 150
    TOK_NE      shift, and go to state 151
    TOK_AND     shift, and go to state 152
    TOK_OR      shift, and go to state 153

    $default  reduce using rule 44 (ret_stmt)


State 103

   47 func_invoc: TOK_IDENT TOK_LPAREN . expr_list_plus TOK_RPAREN

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    $default  reduce using rule 49 (expr_list_plus)

    func_invoc      go to state 96
    expr_list_plus  go to state 155
    expr_list       go to state 156
    ref_expr        go to state 97
    expr_star       go to state 157
    expr            go to state 99
    assign_expr     go to state 100
    literal         go to state 101


State 104

   32 com_stmt: com_stmt TOK_SEMICOLON .

    $default  reduce using rule 32 (com_stmt)


State 105

   42 if_then_else_stmt: if_then_stmt TOK_ELSE . statement_star

    TOK_SEMICOLON  shift, and go to state 48
    TOK_LBRACE     shift, and go to state 49
    TOK_IF         shift, and go to state 50
    TOK_RETURN     shift, and go to state 51
    TOK_IDENT      shift, and go to state 52

    statement_star     go to state 158
    com_stmt_star      go to state 54
    com_stmt           go to state 55
    statement          go to state 56
    if_then_else_stmt  go to state 57
    if_then_stmt       go to state 58
    ret_stmt           go to state 59
    empty_stmt         go to state 60
    func_invoc_stmt    go to state 61
    func_invoc         go to state 62
    ref_expr           go to state 63
    assign_expr        go to state 64


State 106

   39 statement: ret_stmt TOK_SEMICOLON .

    $default  reduce using rule 39 (statement)


State 107

   46 func_invoc_stmt: func_invoc TOK_SEMICOLON .

    $default  reduce using rule 46 (func_invoc_stmt)


State 108

   88 assign_expr: ref_expr TOK_ASSIGN . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 159
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 109

   38 statement: assign_expr TOK_SEMICOLON .

    $default  reduce using rule 38 (statement)


State 110

  117 type: TOK_IDENT .

    $default  reduce using rule 117 (type)


State 111

   17 event_decl_params: TOK_LPAREN formal_param_list_star . TOK_RPAREN TOK_SEMICOLON

    TOK_RPAREN  shift, and go to state 160


State 112

   28 formal_param_list_star: formal_param_list .
   95 formal_param_list: formal_param_list . TOK_COMMA formal_param

    TOK_COMMA  shift, and go to state 161

    $default  reduce using rule 28 (formal_param_list_star)


State 113

   94 formal_param_list: formal_param .

    $default  reduce using rule 94 (formal_param_list)


State 114

   96 formal_param: type_star . TOK_IDENT

    TOK_IDENT  shift, and go to state 162


State 115

   47 func_invoc: TOK_IDENT . TOK_LPAREN expr_list_plus TOK_RPAREN
   60 ref_expr: TOK_IDENT .
  117 type: TOK_IDENT .

    TOK_LPAREN  shift, and go to state 103

    TOK_IDENT  reduce using rule 117 (type)
    $default   reduce using rule 60 (ref_expr)


State 116

   24 func_body: TOK_LBRACE func_body_inner . TOK_RBRACE

    TOK_RBRACE  shift, and go to state 163


State 117

   25 func_body_inner: stmt_list .
   34 stmt_list: stmt_list . statement_star

    TOK_SEMICOLON  shift, and go to state 48
    TOK_LBRACE     shift, and go to state 49
    TOK_IF         shift, and go to state 50
    TOK_RETURN     shift, and go to state 51
    TOK_IDENT      shift, and go to state 52

    $default  reduce using rule 25 (func_body_inner)

    statement_star     go to state 131
    com_stmt_star      go to state 54
    com_stmt           go to state 55
    statement          go to state 56
    if_then_else_stmt  go to state 57
    if_then_stmt       go to state 58
    ret_stmt           go to state 59
    empty_stmt         go to state 60
    func_invoc_stmt    go to state 61
    func_invoc         go to state 62
    ref_expr           go to state 63
    assign_expr        go to state 64


State 118

   26 func_body_inner: var_dec_list . stmt_list
   53 var_dec_list: var_dec_list . var_dec

    TOK_SEMICOLON  shift, and go to state 48
    TOK_LBRACE     shift, and go to state 49
    TOK_IF         shift, and go to state 50
    TOK_RETURN     shift, and go to state 51
    TOK_VOID       shift, and go to state 11
    TOK_STRING     shift, and go to state 12
    TOK_INT        shift, and go to state 13
    TOK_UNSIGNED   shift, and go to state 14
    TOK_BOOL       shift, and go to state 15
    TOK_BYTE       shift, and go to state 16
    TOK_DOUBLE     shift, and go to state 17
    TOK_IDENT      shift, and go to state 115

    statement_star     go to state 85
    com_stmt_star      go to state 54
    com_stmt           go to state 55
    stmt_list          go to state 164
    statement          go to state 56
    if_then_else_stmt  go to state 57
    if_then_stmt       go to state 58
    ret_stmt           go to state 59
    empty_stmt         go to state 60
    func_invoc_stmt    go to state 61
    func_invoc         go to state 62
    var_dec            go to state 165
    ref_expr           go to state 63
    assign_expr        go to state 64
    type_star          go to state 120
    type               go to state 37
    base_type          go to state 38


State 119

   52 var_dec_list: var_dec .

    $default  reduce using rule 52 (var_dec_list)


State 120

   54 var_dec: type_star . var_list TOK_SEMICOLON

    TOK_IDENT  shift, and go to state 166

    var_list    go to state 78
    var_assign  go to state 79


State 121

   23 func_decl_params: TOK_LPAREN formal_param_list_star . TOK_RPAREN

    TOK_RPAREN  shift, and go to state 167


State 122

  100 evn_pat: evn_pat . TOK_PAT_STAR
  101        | evn_pat . TOK_PAT_OR evn_pat
  101        | evn_pat TOK_PAT_OR evn_pat .
  102        | evn_pat . TOK_COLON evn_pat

    TOK_PAT_STAR  shift, and go to state 73
    TOK_COLON     shift, and go to state 75

    $default  reduce using rule 101 (evn_pat)


State 123

  100 evn_pat: evn_pat . TOK_PAT_STAR
  101        | evn_pat . TOK_PAT_OR evn_pat
  102        | evn_pat . TOK_COLON evn_pat
  102        | evn_pat TOK_COLON evn_pat .

    TOK_PAT_STAR  shift, and go to state 73

    $default  reduce using rule 102 (evn_pat)


State 124

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star
  105 primitive_pat_star: primitive_pat TOK_BITOR expr_star .

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145
    TOK_GT      shift, and go to state 146
    TOK_LT      shift, and go to state 147
    TOK_GE      shift, and go to state 148
    TOK_LE      shift, and go to state 149
    TOK_EQ      shift, and go to state 150
    TOK_NE      shift, and go to state 151
    TOK_AND     shift, and go to state 152
    TOK_OR      shift, and go to state 153

    $default  reduce using rule 105 (primitive_pat_star)


State 125

   59 var_assign: TOK_IDENT TOK_ASSIGN . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 168
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 126

   57 var_list: var_list TOK_COMMA . TOK_IDENT
   58         | var_list TOK_COMMA . var_assign

    TOK_IDENT  shift, and go to state 169

    var_assign  go to state 170


State 127

   54 var_dec: type_star var_list TOK_SEMICOLON .

    $default  reduce using rule 54 (var_dec)


State 128

  108 normal_event: TOK_IDENT TOK_LPAREN evn_param_list_star TOK_RPAREN .

    $default  reduce using rule 108 (normal_event)


State 129

  113 evn_param_list: evn_param_list TOK_COMMA . TOK_IDENT

    TOK_IDENT  shift, and go to state 171


State 130

   31 com_stmt: TOK_LBRACE stmt_list TOK_RBRACE .

    $default  reduce using rule 31 (com_stmt)


State 131

   34 stmt_list: stmt_list statement_star .

    $default  reduce using rule 34 (stmt_list)


State 132

   62 expr_star: TOK_MINUS expr_star .
   65          | expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_MULT  shift, and go to state 138
    TOK_DIV   shift, and go to state 139
    TOK_MOD   shift, and go to state 140

    $default  reduce using rule 62 (expr_star)


State 133

   64 expr_star: TOK_BITNOT expr_star .
   65          | expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS   shift, and go to state 136
    TOK_MINUS  shift, and go to state 137
    TOK_MULT   shift, and go to state 138
    TOK_DIV    shift, and go to state 139
    TOK_MOD    shift, and go to state 140
    TOK_SHL    shift, and go to state 144
    TOK_SHR    shift, and go to state 145

    $default  reduce using rule 64 (expr_star)


State 134

   63 expr_star: TOK_NOT expr_star .
   65          | expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145
    TOK_GT      shift, and go to state 146
    TOK_LT      shift, and go to state 147
    TOK_GE      shift, and go to state 148
    TOK_LE      shift, and go to state 149
    TOK_EQ      shift, and go to state 150
    TOK_NE      shift, and go to state 151

    $default  reduce using rule 63 (expr_star)


State 135

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star
   83          | TOK_LPAREN expr_star . TOK_RPAREN

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145
    TOK_GT      shift, and go to state 146
    TOK_LT      shift, and go to state 147
    TOK_GE      shift, and go to state 148
    TOK_LE      shift, and go to state 149
    TOK_EQ      shift, and go to state 150
    TOK_NE      shift, and go to state 151
    TOK_AND     shift, and go to state 152
    TOK_OR      shift, and go to state 153
    TOK_RPAREN  shift, and go to state 172


State 136

   82 expr_star: expr_star TOK_PLUS . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 173
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 137

   75 expr_star: expr_star TOK_MINUS . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 174
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 138

   78 expr_star: expr_star TOK_MULT . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 175
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 139

   77 expr_star: expr_star TOK_DIV . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 176
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 140

   81 expr_star: expr_star TOK_MOD . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 177
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 141

   79 expr_star: expr_star TOK_BITAND . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 178
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 142

   74 expr_star: expr_star TOK_BITOR . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 179
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 143

   65 expr_star: expr_star TOK_BITXOR . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 180
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 144

   66 expr_star: expr_star TOK_SHL . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 181
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 145

   71 expr_star: expr_star TOK_SHR . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 182
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 146

   72 expr_star: expr_star TOK_GT . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 183
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 147

   68 expr_star: expr_star TOK_LT . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 184
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 148

   70 expr_star: expr_star TOK_GE . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 185
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 149

   67 expr_star: expr_star TOK_LE . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 186
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 150

   69 expr_star: expr_star TOK_EQ . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 187
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 151

   76 expr_star: expr_star TOK_NE . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 188
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 152

   80 expr_star: expr_star TOK_AND . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 189
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 153

   73 expr_star: expr_star TOK_OR . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 190
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 154

   43 if_then_stmt: TOK_IF expr_star statement_star .

    $default  reduce using rule 43 (if_then_stmt)


State 155

   47 func_invoc: TOK_IDENT TOK_LPAREN expr_list_plus . TOK_RPAREN

    TOK_RPAREN  shift, and go to state 191


State 156

   48 expr_list_plus: expr_list .
   51 expr_list: expr_list . TOK_COMMA expr_star

    TOK_COMMA  shift, and go to state 192

    $default  reduce using rule 48 (expr_list_plus)


State 157

   50 expr_list: expr_star .
   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145
    TOK_GT      shift, and go to state 146
    TOK_LT      shift, and go to state 147
    TOK_GE      shift, and go to state 148
    TOK_LE      shift, and go to state 149
    TOK_EQ      shift, and go to state 150
    TOK_NE      shift, and go to state 151
    TOK_AND     shift, and go to state 152
    TOK_OR      shift, and go to state 153

    $default  reduce using rule 50 (expr_list)


State 158

   42 if_then_else_stmt: if_then_stmt TOK_ELSE statement_star .

    $default  reduce using rule 42 (if_then_else_stmt)


State 159

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star
   88 assign_expr: ref_expr TOK_ASSIGN expr_star .

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145
    TOK_GT      shift, and go to state 146
    TOK_LT      shift, and go to state 147
    TOK_GE      shift, and go to state 148
    TOK_LE      shift, and go to state 149
    TOK_EQ      shift, and go to state 150
    TOK_NE      shift, and go to state 151
    TOK_AND     shift, and go to state 152
    TOK_OR      shift, and go to state 153

    $default  reduce using rule 88 (assign_expr)


State 160

   17 event_decl_params: TOK_LPAREN formal_param_list_star TOK_RPAREN . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 193


State 161

   95 formal_param_list: formal_param_list TOK_COMMA . formal_param

    TOK_VOID      shift, and go to state 11
    TOK_STRING    shift, and go to state 12
    TOK_INT       shift, and go to state 13
    TOK_UNSIGNED  shift, and go to state 14
    TOK_BOOL      shift, and go to state 15
    TOK_BYTE      shift, and go to state 16
    TOK_DOUBLE    shift, and go to state 17
    TOK_IDENT     shift, and go to state 110

    formal_param  go to state 194
    type_star     go to state 114
    type          go to state 37
    base_type     go to state 38


State 162

   96 formal_param: type_star TOK_IDENT .

    $default  reduce using rule 96 (formal_param)


State 163

   24 func_body: TOK_LBRACE func_body_inner TOK_RBRACE .

    $default  reduce using rule 24 (func_body)


State 164

   26 func_body_inner: var_dec_list stmt_list .
   34 stmt_list: stmt_list . statement_star

    TOK_SEMICOLON  shift, and go to state 48
    TOK_LBRACE     shift, and go to state 49
    TOK_IF         shift, and go to state 50
    TOK_RETURN     shift, and go to state 51
    TOK_IDENT      shift, and go to state 52

    $default  reduce using rule 26 (func_body_inner)

    statement_star     go to state 131
    com_stmt_star      go to state 54
    com_stmt           go to state 55
    statement          go to state 56
    if_then_else_stmt  go to state 57
    if_then_stmt       go to state 58
    ret_stmt           go to state 59
    empty_stmt         go to state 60
    func_invoc_stmt    go to state 61
    func_invoc         go to state 62
    ref_expr           go to state 63
    assign_expr        go to state 64


State 165

   53 var_dec_list: var_dec_list var_dec .

    $default  reduce using rule 53 (var_dec_list)


State 166

   55 var_list: TOK_IDENT .
   59 var_assign: TOK_IDENT . TOK_ASSIGN expr_star

    TOK_ASSIGN  shift, and go to state 125

    $default  reduce using rule 55 (var_list)


State 167

   23 func_decl_params: TOK_LPAREN formal_param_list_star TOK_RPAREN .

    $default  reduce using rule 23 (func_decl_params)


State 168

   59 var_assign: TOK_IDENT TOK_ASSIGN expr_star .
   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145
    TOK_GT      shift, and go to state 146
    TOK_LT      shift, and go to state 147
    TOK_GE      shift, and go to state 148
    TOK_LE      shift, and go to state 149
    TOK_EQ      shift, and go to state 150
    TOK_NE      shift, and go to state 151
    TOK_AND     shift, and go to state 152
    TOK_OR      shift, and go to state 153

    $default  reduce using rule 59 (var_assign)


State 169

   57 var_list: var_list TOK_COMMA TOK_IDENT .
   59 var_assign: TOK_IDENT . TOK_ASSIGN expr_star

    TOK_ASSIGN  shift, and go to state 125

    $default  reduce using rule 57 (var_list)


State 170

   58 var_list: var_list TOK_COMMA var_assign .

    $default  reduce using rule 58 (var_list)


State 171

  113 evn_param_list: evn_param_list TOK_COMMA TOK_IDENT .

    $default  reduce using rule 113 (evn_param_list)


State 172

   83 expr_star: TOK_LPAREN expr_star TOK_RPAREN .

    $default  reduce using rule 83 (expr_star)


State 173

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star
   82          | expr_star TOK_PLUS expr_star .

    TOK_MULT  shift, and go to state 138
    TOK_DIV   shift, and go to state 139
    TOK_MOD   shift, and go to state 140

    $default  reduce using rule 82 (expr_star)


State 174

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   75          | expr_star TOK_MINUS expr_star .
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_MULT  shift, and go to state 138
    TOK_DIV   shift, and go to state 139
    TOK_MOD   shift, and go to state 140

    $default  reduce using rule 75 (expr_star)


State 175

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   78          | expr_star TOK_MULT expr_star .
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    $default  reduce using rule 78 (expr_star)


State 176

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   77          | expr_star TOK_DIV expr_star .
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    $default  reduce using rule 77 (expr_star)


State 177

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   81          | expr_star TOK_MOD expr_star .
   82          | expr_star . TOK_PLUS expr_star

    $default  reduce using rule 81 (expr_star)


State 178

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   79          | expr_star TOK_BITAND expr_star .
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS   shift, and go to state 136
    TOK_MINUS  shift, and go to state 137
    TOK_MULT   shift, and go to state 138
    TOK_DIV    shift, and go to state 139
    TOK_MOD    shift, and go to state 140
    TOK_SHL    shift, and go to state 144
    TOK_SHR    shift, and go to state 145

    $default  reduce using rule 79 (expr_star)


State 179

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   74          | expr_star TOK_BITOR expr_star .
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145

    $default  reduce using rule 74 (expr_star)


State 180

   65 expr_star: expr_star . TOK_BITXOR expr_star
   65          | expr_star TOK_BITXOR expr_star .
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145

    $default  reduce using rule 65 (expr_star)


State 181

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   66          | expr_star TOK_SHL expr_star .
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS   shift, and go to state 136
    TOK_MINUS  shift, and go to state 137
    TOK_MULT   shift, and go to state 138
    TOK_DIV    shift, and go to state 139
    TOK_MOD    shift, and go to state 140

    $default  reduce using rule 66 (expr_star)


State 182

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   71          | expr_star TOK_SHR expr_star .
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS   shift, and go to state 136
    TOK_MINUS  shift, and go to state 137
    TOK_MULT   shift, and go to state 138
    TOK_DIV    shift, and go to state 139
    TOK_MOD    shift, and go to state 140

    $default  reduce using rule 71 (expr_star)


State 183

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   72          | expr_star TOK_GT expr_star .
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 72 (expr_star)


State 184

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   68          | expr_star TOK_LT expr_star .
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 68 (expr_star)


State 185

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   70          | expr_star TOK_GE expr_star .
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 70 (expr_star)


State 186

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   67          | expr_star TOK_LE expr_star .
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 67 (expr_star)


State 187

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   69          | expr_star TOK_EQ expr_star .
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 69 (expr_star)


State 188

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   76          | expr_star TOK_NE expr_star .
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 76 (expr_star)


State 189

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   80          | expr_star TOK_AND expr_star .
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145
    TOK_GT      shift, and go to state 146
    TOK_LT      shift, and go to state 147
    TOK_GE      shift, and go to state 148
    TOK_LE      shift, and go to state 149
    TOK_EQ      shift, and go to state 150
    TOK_NE      shift, and go to state 151

    $default  reduce using rule 80 (expr_star)


State 190

   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   73          | expr_star TOK_OR expr_star .
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145
    TOK_GT      shift, and go to state 146
    TOK_LT      shift, and go to state 147
    TOK_GE      shift, and go to state 148
    TOK_LE      shift, and go to state 149
    TOK_EQ      shift, and go to state 150
    TOK_NE      shift, and go to state 151
    TOK_AND     shift, and go to state 152

    $default  reduce using rule 73 (expr_star)


State 191

   47 func_invoc: TOK_IDENT TOK_LPAREN expr_list_plus TOK_RPAREN .

    $default  reduce using rule 47 (func_invoc)


State 192

   51 expr_list: expr_list TOK_COMMA . expr_star

    TOK_MINUS      shift, and go to state 87
    TOK_BITNOT     shift, and go to state 88
    TOK_NOT        shift, and go to state 89
    TOK_LPAREN     shift, and go to state 90
    TOK_UINTNUM    shift, and go to state 91
    TOK_DOUBLENUM  shift, and go to state 92
    TOK_STRCONST   shift, and go to state 93
    TOK_TRUE       shift, and go to state 94
    TOK_FALSE      shift, and go to state 95
    TOK_IDENT      shift, and go to state 52

    func_invoc   go to state 96
    ref_expr     go to state 97
    expr_star    go to state 195
    expr         go to state 99
    assign_expr  go to state 100
    literal      go to state 101


State 193

   17 event_decl_params: TOK_LPAREN formal_param_list_star TOK_RPAREN TOK_SEMICOLON .

    $default  reduce using rule 17 (event_decl_params)


State 194

   95 formal_param_list: formal_param_list TOK_COMMA formal_param .

    $default  reduce using rule 95 (formal_param_list)


State 195

   51 expr_list: expr_list TOK_COMMA expr_star .
   65 expr_star: expr_star . TOK_BITXOR expr_star
   66          | expr_star . TOK_SHL expr_star
   67          | expr_star . TOK_LE expr_star
   68          | expr_star . TOK_LT expr_star
   69          | expr_star . TOK_EQ expr_star
   70          | expr_star . TOK_GE expr_star
   71          | expr_star . TOK_SHR expr_star
   72          | expr_star . TOK_GT expr_star
   73          | expr_star . TOK_OR expr_star
   74          | expr_star . TOK_BITOR expr_star
   75          | expr_star . TOK_MINUS expr_star
   76          | expr_star . TOK_NE expr_star
   77          | expr_star . TOK_DIV expr_star
   78          | expr_star . TOK_MULT expr_star
   79          | expr_star . TOK_BITAND expr_star
   80          | expr_star . TOK_AND expr_star
   81          | expr_star . TOK_MOD expr_star
   82          | expr_star . TOK_PLUS expr_star

    TOK_PLUS    shift, and go to state 136
    TOK_MINUS   shift, and go to state 137
    TOK_MULT    shift, and go to state 138
    TOK_DIV     shift, and go to state 139
    TOK_MOD     shift, and go to state 140
    TOK_BITAND  shift, and go to state 141
    TOK_BITOR   shift, and go to state 142
    TOK_BITXOR  shift, and go to state 143
    TOK_SHL     shift, and go to state 144
    TOK_SHR     shift, and go to state 145
    TOK_GT      shift, and go to state 146
    TOK_LT      shift, and go to state 147
    TOK_GE      shift, and go to state 148
    TOK_LE      shift, and go to state 149
    TOK_EQ      shift, and go to state 150
    TOK_NE      shift, and go to state 151
    TOK_AND     shift, and go to state 152
    TOK_OR      shift, and go to state 153

    $default  reduce using rule 51 (expr_list)
